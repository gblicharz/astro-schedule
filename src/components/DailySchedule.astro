---
import ChannelRow from "./ChannelRow.astro";
import type { DayFeed, Channel, RequestInit } from "./types";
const API_PASSWORD = import.meta.env.API_PASSWORD;
var feeds: Array<Channel> = [];

try {
  const myHeaders = new Headers();
  myHeaders.append("X-PBSAUTH", API_PASSWORD);

  const requestOptions:RequestInit = {
    method: "GET",
    headers: myHeaders,
    redirect: "follow",
  };

  const response = await fetch(
    "https://tvss.services.pbs.org/tvss/wttw/day/20251029/?fetch-images",
    requestOptions
  );

  if (!response.ok) {
    // Handle HTTP error statuses (e.g., 404, 500)
    const errorData = await response.text();
    throw new Error(
      `HTTP error! Status: ${response.status}, Message: ${errorData}`
    );
  }
  const data: DayFeed = await response.json();

  if (data.feeds) {
    // Filter and sort the feeds
    feeds = data.feeds.filter(
      (feed) => feed.digital_channel !== "" && feed.digital_channel !== "11.5"
    );
    feeds = feeds.sort((a, b) => Number(a.digital_channel) - Number(b.digital_channel));
  }
} catch (error) {
  // Display an error message to the user or log the error
  console.error("Failed to fetch data:", error);
}
---

<div id="container">
  <main>
    <section id="hero">
			<ol class="schedule">
        {feeds.map((chan) => <ChannelRow channel={chan} />)}
      </ol>
    </section>
  </main>
</div>

<style>
  .schedule {
    max-width: 100%;
    overflow-x: scroll;
    list-style: none;
    margin: 0;
    padding: 1rem 1px;

    > li {
      list-style: none;
    }
  }

  #container {
    font-family: Inter, Roboto, "Helvetica Neue", "Arial Nova", "Nimbus Sans",
      Arial, sans-serif;
    height: 100%;
  }

  #hero {
    display: flex;
    align-items: start;
    flex-direction: column;
    justify-content: center;
    padding: 16px;
  }

  h1 {
    font-size: 22px;
    margin-top: 0.25em;
  }

  @media screen and (max-height: 368px) {
    #news {
      display: none;
    }
  }

  @media screen and (max-width: 768px) {
    #container {
      display: flex;
      flex-direction: column;
    }

    #hero {
      display: block;
      padding-top: 10%;
    }

    #links {
      flex-wrap: wrap;
    }

    #links a.button {
      padding: 14px 18px;
    }

    #news {
      right: 16px;
      left: 16px;
      bottom: 2.5rem;
      max-width: 100%;
    }

    h1 {
      line-height: 1.5;
    }
  }
</style>
